services:
  odoodb:
    image: postgres:15
    container_name: odoodb
    restart: unless-stopped
    networks:
      - tipi_main_network
    environment:
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: ${ODOO_POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - ${APP_DATA_DIR}/data/postgresql:/var/lib/postgresql/data
    user: root
  odoo:
    image: odoo:18
    command: --
    container_name: odoo
    restart: unless-stopped
    networks:
      - tipi_main_network
    environment:
      HOST: odoodb
      USER: odoo
      PASSWORD: ${ODOO_POSTGRES_PASSWORD}
    ports:
      - ${APP_PORT}:8069
    volumes:
      - ${APP_DATA_DIR}/data/addons:/mnt/extra-addons
      - ${APP_DATA_DIR}/data/etc:/etc/odoo
      - ${APP_DATA_DIR}/data/odoo-web-data:/var/lib/odoo
      - ${APP_DATA_DIR}/data/filestore:/root/.local/share
    depends_on:
      - odoodb
    labels:
      generated: true
      traefik.enable: true
      traefik.http.middlewares.odoo-web-redirect.redirectscheme.scheme: https
      traefik.http.services.odoo.loadbalancer.server.port: "8069"
      traefik.http.routers.odoo-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.odoo-insecure.entrypoints: web
      traefik.http.routers.odoo-insecure.service: odoo
      traefik.http.routers.odoo-insecure.middlewares: odoo-web-redirect
      traefik.http.routers.odoo.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.odoo.entrypoints: websecure
      traefik.http.routers.odoo.service: odoo
      traefik.http.routers.odoo.tls.certresolver: myresolver
    tty: true
    user: root
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true

