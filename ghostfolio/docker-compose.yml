services:
  ghostfolio:
    image: ghostfolio/ghostfolio:2.135.0
    container_name: ghostfolio
    restart: unless-stopped
    networks:
      - tipi_main_network
    environment:
      NODE_ENV: production
      HOST: 0.0.0.0
      PORT: 3333
      ACCESS_TOKEN_SALT: $GHOSTFOLIO_ACCESS_TOKEN_SALT
      DATABASE_URL: postgresql://ghostfolio:${GHOSTFOLIO_DB_PASSWORD}@ghostfolio-db:5432/ghostfolio?sslmode=prefer
      JWT_SECRET_KEY: ${GHOSTFOLIO_JWT_SECRET_KEY}
      POSTGRES_DB: ghostfolio
      POSTGRES_USER: ghostfolio
      POSTGRES_PASSWORD: ${GHOSTFOLIO_DB_PASSWORD}
      REDIS_HOST: ghostfolio-redis
      REDIS_PASSWORD: ${GHOSTFOLIO_REDIS_PASSWORD}
      REDIS_PORT: 6379
    ports:
      - ${APP_PORT}:3333
    depends_on:
      ghostfolio-db:
        condition: service_healthy
      ghostfolio-redis:
        condition: service_healthy
    labels:
      generated: true
      traefik.enable: true
      traefik.http.middlewares.ghostfolio-web-redirect.redirectscheme.scheme: https
      traefik.http.services.ghostfolio.loadbalancer.server.port: "3333"
      traefik.http.routers.ghostfolio-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.ghostfolio-insecure.entrypoints: web
      traefik.http.routers.ghostfolio-insecure.service: ghostfolio
      traefik.http.routers.ghostfolio-insecure.middlewares: ghostfolio-web-redirect
      traefik.http.routers.ghostfolio.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.ghostfolio.entrypoints: websecure
      traefik.http.routers.ghostfolio.service: ghostfolio
      traefik.http.routers.ghostfolio.tls.certresolver: myresolver
  ghostfolio-db:
    image: postgres:15.4-alpine
    container_name: ghostfolio-db
    restart: unless-stopped
    networks:
      - tipi_main_network
    healthcheck:
      test: pg_isready -d ghostfolio -U ghostfolio
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ghostfolio
      POSTGRES_USER: ghostfolio
      POSTGRES_PASSWORD: ${GHOSTFOLIO_DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ${APP_DATA_DIR}/data/db:/var/lib/postgresql/data
  ghostfolio-redis:
    image: redis:7-alpine
    command: --requirepass ${GHOSTFOLIO_REDIS_PASSWORD}
    container_name: ghostfolio-redis
    restart: unless-stopped
    networks:
      - tipi_main_network
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - ${APP_DATA_DIR}/data/redis:/data
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true

