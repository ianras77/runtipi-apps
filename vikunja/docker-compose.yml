services:
  vikunja:
    image: vikunja/vikunja:0.24.6
    container_name: vikunja
    restart: unless-stopped
    networks:
      - tipi_main_network
    environment:
      VIKUNJA_DATABASE_HOST: vikunja-db
      VIKUNJA_DATABASE_PASSWORD: ${VIKUNJA_DB_PASSWORD}
      VIKUNJA_DATABASE_TYPE: postgres
      VIKUNJA_DATABASE_USER: tipi
      VIKUNJA_DATABASE_DATABASE: vikunja
      VIKUNJA_SERVICE_JWTSECRET: ${VIKUNJA_SERVICE_SECRET}
      VIKUNJA_SERVICE_PUBLICURL: ${APP_PROTOCOL:-http}://${APP_DOMAIN}/
    ports:
      - ${APP_PORT}:3456
    volumes:
      - ${APP_DATA_DIR}/data/files:/app/vikunja/files
    depends_on:
      vikunja-db:
        condition: service_healthy
    labels:
      generated: true
      traefik.enable: true
      traefik.http.middlewares.vikunja-web-redirect.redirectscheme.scheme: https
      traefik.http.services.vikunja.loadbalancer.server.port: "3456"
      traefik.http.routers.vikunja-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.vikunja-insecure.entrypoints: web
      traefik.http.routers.vikunja-insecure.service: vikunja
      traefik.http.routers.vikunja-insecure.middlewares: vikunja-web-redirect
      traefik.http.routers.vikunja.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.vikunja.entrypoints: websecure
      traefik.http.routers.vikunja.service: vikunja
      traefik.http.routers.vikunja.tls.certresolver: myresolver
  vikunja-db:
    image: postgres:14
    container_name: vikunja-db
    restart: unless-stopped
    networks:
      - tipi_main_network
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: ${VIKUNJA_DB_PASSWORD}
      POSTGRES_USER: tipi
      POSTGRES_DB: vikunja
    volumes:
      - ${APP_DATA_DIR}/data/db:/var/lib/postgresql/data
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true

