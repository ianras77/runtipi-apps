services:
  authentik:
    image: ghcr.io/goauthentik/server:2024.12.2
    command: server
    container_name: authentik
    restart: unless-stopped
    networks:
      - tipi_main_network
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-db
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_DB_PASSWORD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    ports:
      - 9443:9443
      - ${APP_PORT}:9000
    volumes:
      - ${APP_DATA_DIR}/data/authentik-media:/media
      - ${APP_DATA_DIR}/data/authentik-custom-templates:/templates
    depends_on:
      - authentik-db
      - authentik-redis
    labels:
      generated: true
      traefik.enable: true
      traefik.http.middlewares.authentik-web-redirect.redirectscheme.scheme: https
      traefik.http.services.authentik.loadbalancer.server.port: "9000"
      traefik.http.routers.authentik-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.authentik-insecure.entrypoints: web
      traefik.http.routers.authentik-insecure.service: authentik
      traefik.http.routers.authentik-insecure.middlewares: authentik-web-redirect
      traefik.http.routers.authentik.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.authentik.entrypoints: websecure
      traefik.http.routers.authentik.service: authentik
      traefik.http.routers.authentik.tls.certresolver: myresolver
      traefik.http.routers.authentik-local-insecure.rule: Host(`authentik.${LOCAL_DOMAIN}`)
      traefik.http.routers.authentik-local-insecure.entrypoints: web
      traefik.http.routers.authentik-local-insecure.service: authentik
      traefik.http.routers.authentik-local-insecure.middlewares: authentik-web-redirect
      traefik.http.routers.authentik-local.rule: Host(`authentik.${LOCAL_DOMAIN}`)
      traefik.http.routers.authentik-local.entrypoints: websecure
      traefik.http.routers.authentik-local.service: authentik
      traefik.http.routers.authentik-local.tls: true
  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.12.2
    command: worker
    container_name: authentik-worker
    restart: unless-stopped
    networks:
      - tipi_main_network
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-db
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_DB_PASSWORD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APP_DATA_DIR}/data/authentik-media:/media
      - ${APP_DATA_DIR}/data/authentik-certs:/certs
      - ${APP_DATA_DIR}/data/authentik-custom-templates:/templates
    depends_on:
      - authentik-db
      - authentik-redis
    user: root
  authentik-db:
    image: postgres:12-alpine
    container_name: authentik-db
    restart: unless-stopped
    networks:
      - tipi_main_network
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s
    environment:
      POSTGRES_PASSWORD: ${AUTHENTIK_DB_PASSWORD}
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
  authentik-redis:
    image: redis:alpine
    command: --save 60 1 --loglevel warning
    container_name: authentik-redis
    restart: unless-stopped
    networks:
      - tipi_main_network
    healthcheck:
      test: redis-cli ping | grep PONG
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 20s
    volumes:
      - ${APP_DATA_DIR}/data/redis:/data
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true

