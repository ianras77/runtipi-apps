services:
  linkwarden:
    image: ghcr.io/linkwarden/linkwarden:v2.9.3
    container_name: linkwarden
    restart: unless-stopped
    networks:
      - tipi_main_network
    environment:
      DATABASE_URL: postgresql://tipi:${LINKWARDEN_DB_PASSWORD}@linkwarden-db:5432/linkwarden
      NEXTAUTH_SECRET: ${LINKWARDEN_NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${APP_PROTOCOL:-http}://${APP_DOMAIN}/api/v1/auth
      NEXT_PUBLIC_DISABLE_REGISTRATION: ${LINKWARDEN_NEXT_PUBLIC_DISABLE_REGISTRATION}
    ports:
      - ${APP_PORT}:3000
    volumes:
      - ${APP_DATA_DIR}/data/linkwarden:/data/data
    depends_on:
      - linkwarden-db
    labels:
      generated: true
      traefik.enable: true
      traefik.http.middlewares.linkwarden-web-redirect.redirectscheme.scheme: https
      traefik.http.services.linkwarden.loadbalancer.server.port: "3000"
      traefik.http.routers.linkwarden-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.linkwarden-insecure.entrypoints: web
      traefik.http.routers.linkwarden-insecure.service: linkwarden
      traefik.http.routers.linkwarden-insecure.middlewares: linkwarden-web-redirect
      traefik.http.routers.linkwarden.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.linkwarden.entrypoints: websecure
      traefik.http.routers.linkwarden.service: linkwarden
      traefik.http.routers.linkwarden.tls.certresolver: myresolver
  linkwarden-db:
    image: postgres:16-alpine
    container_name: linkwarden-db
    restart: unless-stopped
    networks:
      - tipi_main_network
    environment:
      POSTGRES_USER: tipi
      POSTGRES_PASSWORD: ${LINKWARDEN_DB_PASSWORD}
      POSTGRES_DB: linkwarden
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true

